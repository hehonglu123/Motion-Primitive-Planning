from RobotRaconteur.Client import *
import time, argparse, sys
import numpy as np
from pandas import *

sys.path.append('../../toolbox')
from robots_def import *

def main():
    time_from_start=[0.0,1.8187725413396096,1.8259277867900967,1.8338578284443976,1.8479180722011277,1.8668458204910703,1.8961521678357465,1.9416759025317978,2.0011742898503186,2.0754907270228244,2.175389911690151,2.329351658847194,2.4800711794701154,2.6263519442593317,2.765072033345235,2.898681335472161,3.024585504343664,3.149873928899971,3.2720938480457713,3.3941981389671088,3.517599490835363,3.642737517603507,3.7680042987388704,3.8943502973516897,4.0160593500050386,4.141627656170781,4.264584001084068,4.397501798326887,4.535124140535772,4.678830335326348,4.834040254354551,5.0]
    curve_js1=[[ 1.04116312,  0.16312157,  0.0608721,   0.97542916, -1.1593171,  -1.18430101],
            [ 1.05037571,  0.1609414,   0.03813905,  1.0138264,  -1.14732285, -1.24189687],
            [ 1.06146834,  0.16667792,  0.00911073,  1.05292178, -1.14568046, -1.30053993],
            [ 1.07109813,  0.17163826, -0.01991758,  1.09201715, -1.14287835, -1.359183  ],
            [ 1.08019984,  0.17853547, -0.0489459,   1.13111253, -1.14462588, -1.41782606],
            [ 1.08815578,  0.18631633, -0.07797421,  1.1702079,  -1.14855065, -1.47646912],
            [ 1.09515955,  0.1968569,  -0.10700253,  1.20930328, -1.15840857, -1.53511218],
            [ 1.10064567,  0.21151108, -0.13603085,  1.24839865, -1.17650155, -1.59375525],
            [ 1.10300976,  0.22856751, -0.1645408,   1.2867959,  -1.19869471, -1.65135111],
            [ 1.10096156,  0.24723522, -0.19356912,  1.32589127, -1.22270141, -1.70999418],
            [ 1.09220049,  0.26875876, -0.2224685,   1.36498665, -1.25171439, -1.76863724],
            [ 1.07147303,  0.28604301, -0.23444299,  1.40350074, -1.29009058, -1.8272803 ],
            [ 1.04520034,  0.30690195, -0.25708382,  1.44094113, -1.32448338, -1.88592336],
            [ 1.01721642,  0.3285836,  -0.26449358,  1.45288476, -1.35763235, -1.94456643],
            [ 0.98906775,  0.35161472, -0.26677892,  1.4501676,  -1.38817237, -2.00320949],
            [ 0.96091908,  0.37507194, -0.28336226,  1.45323531, -1.41329794, -2.06185255],
            [ 0.93327306,  0.39811029, -0.30911518,  1.45713514, -1.43290388, -2.11944842],
            [ 0.90512439,  0.42140007, -0.3381435,   1.45748487, -1.44977845, -2.17809148],
            [ 0.87697572,  0.44183408, -0.36717181,  1.45489274, -1.4621635,  -2.23673454],
            [ 0.84882705,  0.44794796, -0.39620013,  1.46472906, -1.46293958, -2.29537761],
            [ 0.82067838,  0.45318927, -0.42522844,  1.47433344, -1.46415404, -2.35402067],
            [ 0.79252971,  0.45575995, -0.45425676,  1.48514017, -1.46522777, -2.41266373],
            [ 0.76438104,  0.45691484, -0.48098992,  1.49564257, -1.46789574, -2.4713068 ],
            [ 0.73623237,  0.44912998, -0.48933144,  1.50436064, -1.46891525, -2.52994986],
            [ 0.70858636,  0.43499252, -0.48485115,  1.5124062,  -1.46838493, -2.58754572],
            [ 0.68043769,  0.41771346, -0.46817637,  1.51765747, -1.47159745, -2.64618879],
            [ 0.65228902,  0.39425624, -0.44093033,  1.52647271, -1.47309612, -2.70483185],
            [ 0.62414035,  0.37079901, -0.41190201,  1.53875065, -1.49076208, -2.76347491],
            [ 0.59599168,  0.34734179, -0.38287369,  1.56249,    -1.51630824, -2.82211798],
            [ 0.56784301,  0.32388456, -0.35384538,  1.59548174, -1.54856048, -2.88076104],
            [ 0.53969434,  0.30042734, -0.32481706,  1.62876256, -1.58693817, -2.9394041 ],
            [ 0.51154567,  0.27697011, -0.29578875,  1.66785794, -1.62652224, -2.94675046]]



    robot1="abb1200"
    robot2="abb6640"
    url={robot1:'rr+tcp://localhost:23333?service=robot',robot2:'rr+tcp://localhost:12222?service=robot'}


    robot1_obj = RRN.ConnectService(url[robot1])

    robot_const = RRN.GetConstants("com.robotraconteur.robotics.robot", robot1_obj)

    joint_names = [j.joint_identifier.name for j in robot1_obj.robot_info.joint_info]

    halt_mode = robot_const["RobotCommandMode"]["halt"]
    trajectory_mode = robot_const["RobotCommandMode"]["trajectory"]
    jog_mode = robot_const["RobotCommandMode"]["jog"]

    JointTrajectoryWaypoint = RRN.GetStructureType("com.robotraconteur.robotics.trajectory.JointTrajectoryWaypoint",robot1_obj)
    JointTrajectory = RRN.GetStructureType("com.robotraconteur.robotics.trajectory.JointTrajectory",robot1_obj)

    ###jog to start pose first
    robot1_obj.command_mode = halt_mode
    time.sleep(0.1)
    robot1_obj.command_mode =jog_mode
    robot1_obj.jog_freespace(curve_js1[0], np.ones(6), True)

    ###switch to traj mode
    robot1_obj.command_mode = halt_mode
    time.sleep(0.1)
    robot1_obj.command_mode = trajectory_mode


    state_w1 = robot1_obj.robot_state.Connect()

    state_w1.WaitInValueValid()

    waypoints = []


    for i in range(len(curve_js1)):
        wp = JointTrajectoryWaypoint()
        wp.joint_position = curve_js1[i]
        print(curve_js1[i])
        wp.time_from_start = time_from_start[i]
        waypoints.append(wp)


    traj1 = JointTrajectory()
    traj1.joint_names = joint_names
    traj1.waypoints = waypoints

    robot1_obj.speed_ratio = 1

    traj1_gen = robot1_obj.execute_trajectory(traj1)



    while (True):
        t = time.time()
        try:
            print(state_w1.InValue.joint_position)
            res = traj1_gen.AsyncNext(None,None)
        except RR.StopIterationException:
            break


if __name__ == "__main__":
    main()